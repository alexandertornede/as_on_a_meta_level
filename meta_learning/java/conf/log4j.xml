<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration>
	<appender name="console"
		class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<param name="Threshold" value="trace" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="(%d{ISO8601}) %-5p [%t] [%c.%M (%C:%L)] - %m%n" />
		</layout>
	</appender>

	<appender name="infoFileAppender"
		class="org.apache.log4j.FileAppender">
		<param name="File" value="logs/info.log" />
		<param name="Threshold" value="INFO" />
		<param name="Append" value="false" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="(%d{ISO8601}) %-5p [%t] [%c.%M (%C:%L)] - %m%n" />
		</layout>
	</appender>

	<appender name="errFileAppender"
		class="org.apache.log4j.FileAppender">
		<param name="File" value="logs/error.log" />
		<param name="Threshold" value="ERROR" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="(%d{ISO8601}) %-5p [%t] [%c.%M (%C:%L)] - %m%n" />
		</layout>
	</appender>

	<appender name="warnFileAppender"
		class="org.apache.log4j.FileAppender">
		<param name="File" value="logs/warn.log" />
		<param name="Threshold" value="WARN" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="(%d{ISO8601}) %-5p [%t] [%c.%M (%C:%L)] - %m%n" />
		</layout>
	</appender>

	<appender name="traceFileAppender"
		class="org.apache.log4j.FileAppender">
		<param name="File" value="logs/trace.log" />
		<param name="Threshold" value="TRACE" />
		<param name="Append" value="false" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern"
				value="(%d{ISO8601}) %-5p [%t] [%c.%M (%C:%L)] - %m%n" />
		</layout>
	</appender>

	<logger name="ai.libs">
		<level value="warn" />
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger
		name="ai.libs.jaicore.basic.algorithm.GeneralAlgorithmTester">
		<level value="trace" />
	</logger>
	
	<logger
		name="ai.libs.jaicore.timing">
		<level value="warn" />
	</logger>
	
	<logger
		name="ai.libs.automl.MLPlanResultWithMinimumQualityTest">
		<level value="info" />
	</logger>
	<logger
		name="ai.libs.jaicore.interrupt">
		<level value="warn" />
	</logger>

	<logger name="MLPlanCLI">
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger name="ai.libs.jaicore.graphvisualizer">
		<level value="warn" />
	</logger>

	<logger name="hasco">
		<level value="warn" />
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger name="tester">
		<level value="debug" />
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger name="mlplan">
		<level value="info" />
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger name="ml2plan">
		<level value="info" />
		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<!-- configuration for example classes -->
	<logger name="example">
		<level value="info" />

		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>

	<logger
		name="ai.libs.mlplan.multiclass.sklearn.SKLearnClassifierFactory">
		<level value="warn" />
	</logger>
	
	<logger
		name="ai.libs.mlplan.multiclass.sklearn.MLPlanSKLearnBuilder">
		<level value="info" />
	</logger>
	
	<logger name="ai.libs.jaicore.ml.scikitwrapper">
		<level value="warn" />
	</logger>

	<logger name="ai.libs.jaicore.ml.regression">
		<level value="warn" />
	</logger>

	<logger name="hasco.core.Util">
		<level value="warn" />
	</logger>

	<logger name="hasco.core.IsRefinementCompletedPredicate">
		<level value="warn" />
	</logger>

	<logger name="mlplan.optimizingfactory.optimizer">
		<level value="info" />
	</logger>

	<logger name="mlplan.optimizingfactory.optimizer.hasco">
		<level value="warn" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.solutionevaluator">
		<level value="info" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.solutionevaluator.benchmark">
		<level value="warn" />
	</logger>

	<logger name="mlplan.optimizingfactory.optimizer.hasco.search">
		<level value="warn" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.search._orgraphsearch._algorithm">
		<level value="warn" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.search.nodeevaluator">
		<level value="warn" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.search.treepolicy">
		<level value="warn" />
	</logger>
	
	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.search.nodeevaluator.secondary">
		<level value="trace" />
	</logger>

	<logger
		name="mlplan.optimizingfactory.optimizer.hasco.search.nodeevaluator.secondary.randomsearch">
		<level value="warn" />
	</logger>

	<logger
		name="hasco.core.isValidParameterRangeRefinementPredicate">
		<level value="warn" />
	</logger>

	<!-- configuration for ML-Plan Test logging -->
	<logger name="testedalgorithm">
		<level value="info" />

		<appender-ref ref="console" />
		<appender-ref ref="infoFileAppender" />
		<appender-ref ref="warnFileAppender" />
		<appender-ref ref="errFileAppender" />
		<appender-ref ref="traceFileAppender" />
	</logger>
	
	<logger name="testedalgorithm.searchselectsplitter">
		<level value="warn" />
	</logger>

	<logger name="testedalgorithm.optimizingfactory">
		<level value="warn" />
	</logger>

	<logger name="testedalgorithm.optimizingfactory.optimizer">
		<level value="warn" />
	</logger>

	<logger name="testedalgorithm.optimizingfactory.optimizer.hasco">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.optimizingfactory.optimizer.hasco.search">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.optimizingfactory.optimizer.hasco.search.nodeevaluator">
		<level value="warn" />
	</logger>
	
	<logger
		name="testedalgorithm.optimizingfactory.optimizer.hasco.search.nodeevaluator.secondary.evaluator.fw">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.optimizingfactory.optimizer.hasco.search.nodeevaluator.randomsearch">
		<level value="warn" />
	</logger>

	<!-- configuration for ML-Plan 4 big data Test logging -->
	<logger name="testedalgorithm.mlplan.optimizingfactory">
		<level value="warn" />
	</logger>

	<logger name="testedalgorithm.mlplan.optimizingfactory.optAlgo">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.mlplan.optimizingfactory.optAlgo.hasco.solutionevaluator">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.mlplan.optimizingfactory.optAlgo.hasco">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.mlplan.optimizingfactory.optAlgo.hasco.search">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.mlplan.optimizingfactory.optAlgo.hasco.search.nodeevaluator">
		<level value="warn" />
	</logger>

	<logger
		name="testedalgorithm.optimizingfactory.optAlgo.hasco.search.nodeevaluator.primary.evaluate">
		<level value="warn" />
	</logger>
</log4j:configuration>