# VBS - Oracle Gap Level 0
SELECT oracle_level_0.scenario_name, oracle_level_0.fold, oracle_result_level_0, sbs_result_level_0, sbs_result_level_0/oracle_result_level_0 FROM (SELECT scenario_name, fold, result as oracle_result_level_0 FROM `server_results_meta_level_0` WHERE approach="oracle" AND metric="par10") as oracle_level_0 JOIN (SELECT scenario_name, fold, result as sbs_result_level_0 FROM `server_results_meta_level_0` WHERE approach="sbs" AND metric="par10") as sbs_level_0 ON oracle_level_0.scenario_name = sbs_level_0.scenario_name AND oracle_level_0.fold = sbs_level_0.fold

# VBS - Oracle Gap Level 1
SELECT oracle_level_1.scenario_name, oracle_level_1.fold, oracle_result_level_1, sbs_result_level_1, sbs_result_level_1/oracle_result_level_1 FROM (SELECT scenario_name, fold, result as oracle_result_level_1 FROM `server_results_meta_level_1` WHERE approach="oracle" AND metric="par10") as oracle_level_1 JOIN (SELECT scenario_name, fold, result as sbs_result_level_1 FROM `server_results_meta_level_1` WHERE approach="sbs_with_feature_costs" AND metric="par10") as sbs_level_1 ON oracle_level_1.scenario_name = sbs_level_1.scenario_name AND oracle_level_1.fold = sbs_level_1.fold


# First result table comparing changes in SBS, VBS and SBS/VBS GAP
SELECT oracle_vbs_gap_level_0.scenario_name, oracle_vbs_gap_level_0.fold, oracle_vbs_gap_level_0.oracle_result_level_0, oracle_vbs_gap_level_1.oracle_result_level_1, oracle_vbs_gap_level_1.oracle_result_level_1 / oracle_vbs_gap_level_0.oracle_result_level_0 as oracle_level_1_div_oracle_level_0, oracle_vbs_gap_level_0.sbs_result_level_0, oracle_vbs_gap_level_1.sbs_result_level_1, oracle_vbs_gap_level_0.sbs_result_level_0/oracle_vbs_gap_level_1.sbs_result_level_1 as sbs_level_0_div_sbs_level_1, oracle_vbs_gap_level_0.sbs_result_level_0_div_oracle_result_level_0, oracle_vbs_gap_level_1.sbs_result_level_1_div_oracle_result_level_1  FROM `oracle_vbs_gap_level_0` JOIN `oracle_vbs_gap_level_1` ON oracle_vbs_gap_level_0.scenario_name = oracle_vbs_gap_level_1.scenario_name AND oracle_vbs_gap_level_0.fold = oracle_vbs_gap_level_1.fold

# Aggregated first result table
SELECT scenario_name, AVG(oracle_result_level_0), AVG(oracle_result_level_1), AVG(oracle_level_1_div_oracle_level_0), AVG(sbs_result_level_0), AVG(sbs_result_level_1), AVG(sbs_level_0_div_sbs_level_1), AVG(sbs_result_level_0_div_oracle_result_level_0), AVG(sbs_result_level_1_div_oracle_result_level_1) FROM `complete_sbs_vbs_and_gap_overview` GROUP BY scenario_name ORDER BY scenario_name



# APPROACH, SBS AND VBS GROUPED for LEVEL 0
SELECT oracle_and_sbs_table.scenario_name, oracle_and_sbs_table.fold, server_results_meta_level_0.approach, oracle_and_sbs_table.metric, server_results_meta_level_0.result, oracle_and_sbs_table.oracle_result, oracle_and_sbs_table.sbs_result FROM (SELECT oracle_table.scenario_name, oracle_table.fold, oracle_table.metric, oracle_result, sbs_result FROM (SELECT scenario_name, fold, approach, metric, result as oracle_result FROM `server_results_meta_level_0` WHERE approach='oracle') as oracle_table JOIN (SELECT scenario_name, fold, approach, metric, result as sbs_result FROM `server_results_meta_level_0` WHERE approach='sbs') as sbs_table ON oracle_table.scenario_name = sbs_table.scenario_name AND oracle_table.fold=sbs_table.fold AND oracle_table.metric = sbs_table.metric) as oracle_and_sbs_table JOIN server_results_meta_level_0 ON oracle_and_sbs_table.scenario_name = server_results_meta_level_0.scenario_name AND oracle_and_sbs_table.fold = server_results_meta_level_0.fold AND oracle_and_sbs_table.metric = server_results_meta_level_0.metric

# Normalized PAR 10 preparation table for LEVEL 0
SELECT oracle_and_sbs_table.scenario_name, oracle_and_sbs_table.fold, server_results_meta_level_0.approach, oracle_and_sbs_table.metric, server_results_meta_level_0.result, ((server_results_meta_level_0.result - oracle_and_sbs_table.oracle_result)/(oracle_and_sbs_table.sbs_result -oracle_and_sbs_table.oracle_result)) as n_par10,oracle_and_sbs_table.oracle_result, oracle_and_sbs_table.sbs_result FROM (SELECT oracle_table.scenario_name, oracle_table.fold, oracle_table.metric, oracle_result, sbs_result FROM (SELECT scenario_name, fold, approach, metric, result as oracle_result FROM `server_results_meta_level_0` WHERE approach='oracle') as oracle_table JOIN (SELECT scenario_name, fold, approach, metric, result as sbs_result FROM `server_results_meta_level_0` WHERE approach='sbs') as sbs_table ON oracle_table.scenario_name = sbs_table.scenario_name AND oracle_table.fold=sbs_table.fold AND oracle_table.metric = sbs_table.metric) as oracle_and_sbs_table JOIN server_results_meta_level_0 ON oracle_and_sbs_table.scenario_name = server_results_meta_level_0.scenario_name AND oracle_and_sbs_table.fold = server_results_meta_level_0.fold AND oracle_and_sbs_table.metric = server_results_meta_level_0.metric WHERE oracle_and_sbs_table.metric='par10'


# Normalized PAR 10 preparation table for LEVEL 1
SELECT oracle_and_sbs_table.scenario_name, oracle_and_sbs_table.fold, server_results_meta_level_1.approach, oracle_and_sbs_table.metric, server_results_meta_level_1.result, ((server_results_meta_level_1.result - oracle_and_sbs_table.oracle_result)/(oracle_and_sbs_table.sbs_result -oracle_and_sbs_table.oracle_result)) as n_par10,oracle_and_sbs_table.oracle_result, oracle_and_sbs_table.sbs_result FROM (SELECT oracle_table.scenario_name, oracle_table.fold, oracle_table.metric, oracle_result, sbs_result FROM (SELECT scenario_name, fold, approach, metric, result as oracle_result FROM `server_results_meta_level_1` WHERE approach='oracle') as oracle_table JOIN (SELECT scenario_name, fold, approach, metric, result as sbs_result FROM `server_results_meta_level_1` WHERE approach='sbs_with_feature_costs') as sbs_table ON oracle_table.scenario_name = sbs_table.scenario_name AND oracle_table.fold=sbs_table.fold AND oracle_table.metric = sbs_table.metric) as oracle_and_sbs_table JOIN server_results_meta_level_1 ON oracle_and_sbs_table.scenario_name = server_results_meta_level_1.scenario_name AND oracle_and_sbs_table.fold = server_results_meta_level_1.fold AND oracle_and_sbs_table.metric = server_results_meta_level_1.metric WHERE oracle_and_sbs_table.metric='par10'

# LEVEL 1: Normalized by level 0
SELECT oracle_and_sbs_table.scenario_name, oracle_and_sbs_table.fold, CONCAT('l1_',server_results_meta_level_1.approach) as approach, ((server_results_meta_level_1.result - oracle_and_sbs_table.oracle_result)/(oracle_and_sbs_table.sbs_result -oracle_and_sbs_table.oracle_result)) as n_par10 FROM (SELECT oracle_table.scenario_name, oracle_table.fold, oracle_table.metric, oracle_result, sbs_result FROM (SELECT scenario_name, fold, approach, metric, result as oracle_result FROM `server_results_meta_level_0` WHERE approach='oracle') as oracle_table JOIN (SELECT scenario_name, fold, approach, metric, result as sbs_result FROM `server_results_meta_level_0` WHERE approach='sbs') as sbs_table ON oracle_table.scenario_name = sbs_table.scenario_name AND oracle_table.fold=sbs_table.fold AND oracle_table.metric = sbs_table.metric) as oracle_and_sbs_table JOIN server_results_meta_level_1 ON oracle_and_sbs_table.scenario_name = server_results_meta_level_1.scenario_name AND oracle_and_sbs_table.fold = server_results_meta_level_1.fold AND oracle_and_sbs_table.metric = server_results_meta_level_1.metric WHERE oracle_and_sbs_table.metric='par10'


# Normalized PAR 10 for both levels normalized by level 0
SELECT union_table.scenario_name, union_table.approach, AVG(union_table.n_par10) as avg_n_par10 FROM ((SELECT * FROM `normalized_by_level_0_par10_level_1` UNION SELECT * FROM `normalized_par10_level_0`) as union_table) GROUP BY union_table.scenario_name, union_table.approach ORDER BY union_table.scenario_name, avg_n_par10